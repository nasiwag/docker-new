name: nodeapp

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  AWS_REGION: "us-east-1"               
  ECR_REPOSITORY: "demo20repo"
  ECS_SERVICE: "naservice20"          
  ECS_CLUSTER: "demo20cluster"        
  ECS_TASK_DEFINITION_FILE: "./demo20taskdef"
  ECS_TASK_DEFINITION: "demo20taskdef"
  CONTAINER_NAME: "demo20contain"
  IMAGE_TAG: "latest"
  #SECRET_NAME: "dev-backend-secret"
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Download task definition
        run: |
           touch  ${{ env.ECS_TASK_DEFINITION_FILE }}
           aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > ${{ env.ECS_TASK_DEFINITION_FILE }}
           cat ${{ env.ECS_TASK_DEFINITION_FILE }}
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "latest"
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        env:
         ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_FILE }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: $ECR_REGISTRY/$ECR_REPOSITORY:${{env.IMAGE_TAG}}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{env.ECS_TASK_DEFINITION_FILE }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          aws-region: ${{ env.AWS_REGION }}
          wait-for-service-stability: true
